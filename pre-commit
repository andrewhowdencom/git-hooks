#!/usr/bin/env bash
# Formatting Functions
function printHookStart {
      echo "*** Start $1 ***"
}

function printHookEnd {
     echo "*** End $1 ***"
}

printHookStart $0

php_types=("php" "tml")
xml_types=("xml")
scss_types=("scss")
errors_exist=0
lint=0
staged_files=$(git diff --name-only --cached HEAD)

# Correctly formmatted variables
COMMIT_BLOCKING_TEXT=("block_commit" "console.log" "debug.log")

JS_SUFFIXES=("js")

TEXT_RED='\033[0;31m'
TEXT_ORANGE='\033[0;33m'
TEXT_YELLOW='\033[0;33m'
TEXT_NC='\033[0m'


# http://stackoverflow.com/questions/14366390/bash-if-condition-check-if-element-is-present-in-array
function array_contains () { 
    local array="$1[@]"
    local seeking=$2
    local in=1
    for element in "${!array}"; do
        if [[ $seeking == *"$element"* ]]; then
            in=0
            break
        fi
    done
    return $in
}

for file in $staged_files;
  do
    if [[ ! -f "$file" ]]; then
      echo "Skipping $file: It's been deleted"
      continue;
    fi  
     
    # Commit blocking comments / todo's
    GREP_ARG=$(echo ${COMMIT_BLOCKING_TEXT[@]} | tr " " "|")
    grep -Eowi "$GREP_ARG" ${file} > /dev/null
    if [[ $? -eq 0 ]]; then 
       echo "$GREP_ARG found in ${file}";
       # Grep returns a success if it finds something, which we DONT want.
       errors_exist=1
    fi

    # php -l
    array_contains php_types ${file: -5}
    if [[ $? -eq 0 ]]; then
      for PHP_BINARY in php php5-6cli php7cli; 
          do
            # Get the result of the PHP Linter
            RES=$("$PHP_BINARY" -l $file)
            
            # Check if the file is valid
            if [[ $? -ne 0 ]]; then
                errors_exist=1 
            fi

            # Print the result to the user, per PHP Version
            echo -e "${TEXT_YELLOW} $PHP_BINARY ${TEXT_NC}: $RES"
        done
    fi
    
    # xmllint
    array_contains xml_types ${file: -3}
    if [[ $? -eq 0 ]]; then 
        xmllint --noout $file;
        
        if [[ $? -ne 0 ]]; then
            errors_exist=1
        fi
    fi

    # scss-lint
    array_contains scss_types ${file: -4}
    if [[ $? -eq 0 ]]; then 
       scss-lint $file;

       if [[ $? == 2 ]]; then
          errors_exist=1
       fi
   fi
   
   array_contains JS_SUFFIXES ${file: -2}
   if [[ $? -eq 0 ]]; then 
      eslint $file;
   
      if [[ $? -ne 0 ]]; then
          errors_exist=1
      fi
   fi
done

# Discontinue process for critical errors
if [[ $errors_exist -ne 0 ]]; then
  echo -e "${TEXT_RED}
  ----------------------------- STOP -----------------------------
  Something is hella wrong here; You failed the lints. You need to 
  fix that up before I'm a let you commit! 
  ----------------------------- STOP -----------------------------
  ${TEXT_NC}"
  exit $errors_exist;
fi

for file in $staged_files;
  do
    if [[ ! -f "$file" ]]; then
      echo "Skipping $file: It's been deleted"
      continue;
    fi

    # phpcs
    array_contains php_types ${file: -5}
      if [[ $? -eq 0 ]]; then 
      phpcs --standard=HowdenioMagento $file

        success=$?
        if [[ $success -ne 0 ]]; then
          lint=$success
        fi
     fi
  done

printHookEnd $0

