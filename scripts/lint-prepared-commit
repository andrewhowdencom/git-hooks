#!/bin/bash

function loudError() {
   echo >&2 "------------- START WARNING ---------------"
   echo >&2 "$1"
   echo >&2 "-------------- END WARNING ----------------"
}

# Declare Variables
draft_path=".git/DRAFT_COMMIT_EDITMSG"
rm "$draft_path" 

# Define a series of "bad words" -- Words that are redundant, not descriptive enough or not the canonical reference
bad_words=( \
correct \
improve improved \
update updated \
fix \
mobile iPhone iphone\
tablet ipad \
fixed fixing \
alter altered \
refactor refactored \
resolve resolved \ 
update updated \
)

COMMIT_MSG=$(grep "^[^#]" "$1"  | head -n 1);

# Check whether "RFNO" string still exists (hasn't been checked)
if [[ ! -z "$(grep 'RFNO' "$1")" ]]; then 
    cp ".git/COMMIT_EDITMSG" "$draft_path"
    echo >&2 "RFNO Present: You've not refactored your commit message. Aborting Commit."
    exit 1
fi

for bad_word in ${bad_words[*]};
do
    if [[ ! -z "$(grep -i "$bad_word\s" <<< $COMMIT_MSG)" ]]; then
        cp ".git/COMMIT_EDITMSG" "$draft_path"
        loudError "Found \"$bad_word\" in the commit msg head. Aborting Commit."
        exit 1
    fi
done 

# Check for spelling errors
SPELLING_ERRORS="$(cat $1 | aspell --list)"
if [[ ! -z $SPELLING_ERRORS ]]; then
    echo >&2 "------------- SPELLING ERRORS -------------"
    echo >&2 "The following words appear to have been misspelled:"
    echo >&2 "$SPELLING_ERRORS"
    echo >&2 "------------- SPELLING ERRORS -------------"
fi

# Check the line length
if [[ ${#COMMIT_MSG} > 100 ]]; then
    loudError "Commit heading line length above 100 chars -- Shorten it"
    exit 1
elif [[ ${#COMMIT_MSG} > 70 ]]; then
    loudError "Commit message line length above 72 characters -- You should amend it"
fi
